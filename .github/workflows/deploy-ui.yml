name: Deploy UI 
on:
  workflow_dispatch:
  push:
    branches:
      - temporary
    paths:
      - 'modules/front-end/**'
      - '.github/workflows/deploy-ui.yml'
jobs:
  deploy-prod:
    name : Deploy to production
    runs-on: ubuntu-latest
    environment : prod
    env:
      container_name: ui
      ecr_repository: featbit-prod-ui-ecr-repo
      ecs_service: featbit-prod-ui-ecs-service
      ecs_cluster: featbit-prod-ecs-cluster
      api_url: https://apiv2.featureflag.co
      demo_url: https://featbit-samples.vercel.app
      evaluation_url: https://streaming.featureflag.co
      region: cn-northwest-1
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set parameters
        run: |
          export API_URL=$api_url
          export DEMO_URL=$demo_url
          export EVALUATION_URL=$evaluation_url

          envsubst < modules/front-end/src/assets/env.template.js > modules/front-end/src/assets/env.js
          rm modules/front-end/src/assets/env.template.js
          mv modules/front-end/src/assets/env.js modules/front-end/src/assets/env.template.js

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition featbit-prod-ui-ecs-task  | jq -r '.taskDefinition'> task-definition.json
          aws ecs describe-task-definition --task-definition featbit-prod-ui-ecs-task  | jq -r '.taskDefinition'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ecr_repository }}
          IMAGE_TAG: latest
        run: |
          echo $GITHUB_WORKSPACE
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./modules/front-end
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.container_name }}
          image: ${{ steps.build-image.outputs.image }}
  
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ecs_service }}
          cluster: ${{ env.ecs_cluster }}
          wait-for-service-stability: true